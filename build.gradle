plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'io.github.juuxel.loom-vineflower' version '1.11.0' // to use genSourcesWithVineflower
	id "me.champeau.jmh" version "0.6.6"
}

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://maven.parchmentmc.org" }		// parchment mappings
	maven { url "https://maven.terraformersmc.com/" } 	// modmenu
	maven { name = "Modrinth"							// lazydfu, starlight, lithium
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	// essentials & mappings
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	mappings loom.officialMojangMappings()

	// apis
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// devenv mods
	modRuntimeOnly include(fabricApi.module("fabric-command-api-v2", project.fabric_version))
	modRuntimeOnly include(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
	modRuntimeOnly("com.terraformersmc:modmenu:${project.modmenu_version}") { transitive = false }
	modRuntimeOnly(include(fabricApi.module("fabric-screen-api-v1", project.fabric_version)))

	// libraries
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	// test
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

processResources {
	inputs.property "version", version // if version changes this task will be called again

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}"}
	}
}
